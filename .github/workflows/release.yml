name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.17.0"

jobs:
  prepare:
    name: "Prepare Release"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    outputs:
      version: ${{ fromJson(steps.changelog.outputs.data).newVersion }}
      last-version: ${{ fromJson(steps.changelog.outputs.data).lastVersion }}
      changelog: ${{ fromJson(steps.changelog.outputs.data).changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Derive appropriate SHAs for base and head
        id: shas
        uses: nrwl/nx-set-shas@v3

      - name: Changelog Generation
        id: changelog
        env:
          GENERATE_VERSION: ${{ github.event_name != 'push' || github.repository != 'kblocksio/kblocks' }}
        run: ./scripts/changelog.sh

      - name: Check if version changed
        if: ${{ fromJson(steps.changelog.outputs.data).lastVersion == fromJson(steps.changelog.outputs.data).newVersion }}
        run: |
          echo "No version change detected. Failing the workflow."
          exit 1

      # tag the commit so it won't be reused for a different release - if our release fails, we will
      # skip this version but that's better than trying to release the same version twice
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.PROJEN_GITHUB_TOKEN }}"
          tag: "v${{ fromJson(steps.changelog.outputs.data).newVersion }}"

  publish:
    name: Publish ${{ matrix.package }}
    runs-on: ubuntu-latest
    env:
      KBLOCKS_VERSION: ${{ needs.prepare.outputs.version }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    needs:
      - prepare
      - publish_images # make sure images are published first before we publish the CLI and API packages
    strategy:
      matrix:
        package:
          - "@kblocks/api"
          - "@kblocks/cli"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Login to NPM
        run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_PUBLISH_TOKEN }}
  
      - name: Publish ${{ matrix.package }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 5
          command: |
            cd packages/${{ matrix.package }}
            npm run publish

  publish_images:
    name: Publish Image ${{ matrix.image }}
    strategy:
      matrix:
        image: [operator, worker, control]
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          context: packages/@kblocks/${{ matrix.image }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: wingcloudbot/kblocks-${{ matrix.image }}:latest,wingcloudbot/kblocks-${{ matrix.image }}:${{ needs.prepare.outputs.version }}
          cache-from: type=registry,ref=wingcloudbot/kblocks-${{ matrix.image }}:latest
          cache-to: type=inline
          build-args: |
            KBLOCKS_VERSION=${{ needs.prepare.outputs.version }}

  cut_release:
    name: Cut Release
    needs:
      - prepare
      - publish
      - publish_images

    runs-on: ubuntu-latest
    steps:
      - name: Write Changelog
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: "CHANGELOG.md"
          contents: ${{ needs.prepare.outputs.changelog }}
          write-mode: overwrite
      - name: Cut Development Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Kblocks ${{ needs.prepare.outputs.version }}"
          tag_name: "v${{ needs.prepare.outputs.version }}"
          body_path: CHANGELOG.md
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
