name: Build

on:
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.17.0"

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Dependencies
        run: npm ci

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
          chmod +x skaffold
          sudo mv skaffold /usr/local/bin

      - name: Install Qkube
        run: |
          qkube_url=$(curl -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/winglang/quickube/releases/latest | jq -r ".assets[].url")
          curl -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "Accept: application/octet-stream" -L -o /tmp/qkube $qkube_url
          sudo mv /tmp/qkube /usr/local/bin/qkube
          sudo chmod +x /usr/local/bin/qkube
          qkube ls

      - name: Create empty kube config
        run: |
          mkdir -p /home/runner/.kube
          echo "apiVersion: v1" > /home/runner/.kube/config

      - name: Setup a new qkube
        id: qkube
        run: |
          QKUBE_NAME=$(qkube new --size small | awk -F'"' '/\.quickube\.sh/ {print $2; exit}')
          echo "Using qkube $QKUBE_NAME"
          # save the qkube name to the workspace
          echo "qbube-name=$QKUBE_NAME" >> $GITHUB_OUTPUT

      - name: Start skaffold
        run: |
          skaffold run

      - name: Run tests
        run: |
          cd test/tests
          kubectl port-forward svc/kblocks-test-testserver 8080:80 -n kblocks-test &
          sleep 7
          npm run test

      - name: Delete the qkube on exit
        if: always()
        run: |
          QKUBE_NAME=${{ steps.qkube.outputs.qbube-name }}
          if [ -n "$QKUBE_NAME" ]; then
            echo "Deleting qkube $QKUBE_NAME"
            qkube rm $QKUBE_NAME
          fi
