name: Build

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.11.1"

jobs:
  build:
    name: "Build"
    timeout-minutes: 30
    runs-on: ubuntu-latest
    outputs:
      version: ${{ fromJson(steps.changelog.outputs.data).newVersion }}
      last-version: ${{ fromJson(steps.changelog.outputs.data).lastVersion }}
      changelog: ${{ fromJson(steps.changelog.outputs.data).changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Install cdk8s
        run: npm install -g cdk8s-cli tsx

      - name: Derive appropriate SHAs for base and head
        id: shas
        uses: nrwl/nx-set-shas@v3

      - name: Changelog Generation
        id: changelog
        env:
          GENERATE_VERSION: ${{ github.event_name != 'push' || github.repository != 'winglang/kblocks' }}
        run: node bin/bump-pack.cjs
        working-directory: packages/bump-pack

      - name: Build
        run: npm run --if-present -ws build

      - name: Build helm Chart
        run: npx cdk8s synth --app "tsx ./src/index.ts" --output ../../../dist/templates
        working-directory: packages/@kblocks/cli
        env:
          KBLOCKS_VALUES_FILE: block/kblock.values.json
          KBLOCKS_OUTPUT_DIR: ../../../dist
          KBLOCKS_KBLOCK_DIR: .
          KBLOCKS_VERSION: ${{ fromJson(steps.changelog.outputs.data).newVersion }}
          KBLOCKS_OPERATOR_IMAGE: wingcloudbot/kblocks-operator:${{ fromJson(steps.changelog.outputs.data).newVersion }}
          KBLOCKS_CONTROL_IMAGE: wingcloudbot/kblocks-control:${{ fromJson(steps.changelog.outputs.data).newVersion }}
          KBLOCKS_WORKER_IMAGE: wingcloudbot/kblocks-worker:${{ fromJson(steps.changelog.outputs.data).newVersion }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    name: Publish
    if: ${{ !cancelled() && github.event_name == 'push' && github.repository == 'winglang/kblocks' && github.ref == 'refs/heads/main' }}
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4

      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        if: ${{ needs.build.outputs.last-version != needs.build.outputs.version }}
        with:
          repo-token: "${{ secrets.PROJEN_GITHUB_TOKEN }}"
          tag: "v${{ needs.build.outputs.version }}"

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push operator
        uses: docker/build-push-action@v6
        with:
          context: packages/@kblocks/operator
          push: true
          platforms: linux/amd64,linux/arm64
          tags: wingcloudbot/kblocks-operator:latest,wingcloudbot/kblocks-operator:${{ needs.build.outputs.version }}
          cache-from: type=registry,ref=wingcloudbot/kblocks-operator:latest
          cache-to: type=inline

      - name: Build and push worker
        uses: docker/build-push-action@v6
        with:
          context: packages/@kblocks/worker
          push: true
          platforms: linux/amd64,linux/arm64
          tags: wingcloudbot/kblocks-worker:latest,wingcloudbot/kblocks-worker:${{ needs.build.outputs.version }}
          cache-from: type=registry,ref=wingcloudbot/kblocks-worker:latest
          cache-to: type=inline
          build-args: |
            KBLOCKS_OPERATOR_IMAGE=wingcloudbot/kblocks-operator:${{ needs.build.outputs.version }}
            KBLOCKS_CONTROL_IMAGE=wingcloudbot/kblocks-control:${{ needs.build.outputs.version }}
            KBLOCKS_WORKER_IMAGE=wingcloudbot/kblocks-worker:${{ needs.build.outputs.version }}

      - name: Build and push control
        uses: docker/build-push-action@v6
        with:
          context: packages/@kblocks/control
          push: true
          platforms: linux/amd64,linux/arm64
          tags: wingcloudbot/kblocks-control:latest,wingcloudbot/kblocks-control:${{ needs.build.outputs.version }}
          cache-from: type=registry,ref=wingcloudbot/kblocks-control:latest
          cache-to: type=inline

      - name: Login to helm registry
        id: login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | helm registry login registry-1.docker.io --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Package helm chart
        run: helm package dist

      - name: Push helm chart
        run: helm push block-kblock-*.tgz oci://registry-1.docker.io/${{ secrets.DOCKER_USERNAME }}

      - name: Write Changelog
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: "CHANGELOG.md"
          contents: ${{ needs.build.outputs.changelog }}
          write-mode: overwrite

      - name: Cut Development Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Kblocks ${{ needs.build.outputs.version }}"
          tag_name: "v${{ needs.build.outputs.version }}"
          body_path: CHANGELOG.md
          files: dist/*
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
