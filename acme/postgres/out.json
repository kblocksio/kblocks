{"name":"test","info":{"first_deployed":"2024-07-31T10:24:37.588958+03:00","last_deployed":"2024-07-31T10:24:37.588958+03:00","deleted":"","description":"Install complete","status":"deployed","notes":"{\n  \"host\": \"test-postgresql\",\n  \"user\": \"postgres\",\n  \"database\": \"postgres\",\n  \"port\": \"5432\",\n  \"passwordSecret\": \"test-postgresql\",\n  \"passwordKey\": \"postgres-password\"\n}"},"chart":{"metadata":{"name":"postgres","version":"0.1.0","description":"Postgres database for Acme teams","apiVersion":"v2","dependencies":[{"name":"postgresql","version":"15.5.20","repository":"https://charts.bitnami.com/bitnami","enabled":true}],"type":"application"},"lock":{"generated":"2024-07-31T08:34:13.943058+03:00","digest":"sha256:c2b37f568f43bcf73d8dc3ff2c069fa1a92b45535f4109fe480f8b044349d0f7","dependencies":[{"name":"postgresql","version":"15.5.20","repository":"https://charts.bitnami.com/bitnami"}]},"templates":[{"name":"templates/NOTES.txt","data":"ewogICJob3N0IjogInt7IC5SZWxlYXNlLk5hbWUgfX0tcG9zdGdyZXNxbCIsCiAgInVzZXIiOiAicG9zdGdyZXMiLAogICJkYXRhYmFzZSI6ICJwb3N0Z3JlcyIsCiAgInBvcnQiOiAiNTQzMiIsCiAgInBhc3N3b3JkU2VjcmV0IjogInt7IC5SZWxlYXNlLk5hbWUgfX0tcG9zdGdyZXNxbCIsCiAgInBhc3N3b3JkS2V5IjogInBvc3RncmVzLXBhc3N3b3JkIgp9"}],"values":{"postgresql":{"architecture":"standalone","audit":{"clientMinMessages":"error","logConnections":false,"logDisconnections":false,"logHostname":false,"logLinePrefix":"","logTimezone":"","pgAuditLog":"","pgAuditLogCatalog":"off"},"auth":{"database":"","enablePostgresUser":true,"existingSecret":"","password":"","postgresPassword":"","replicationPassword":"","replicationUsername":"repl_user","secretKeys":{"adminPasswordKey":"postgres-password","replicationPasswordKey":"replication-password","userPasswordKey":"password"},"usePasswordFiles":false,"username":""},"backup":{"cronjob":{"annotations":{},"command":["/bin/sh","-c","pg_dumpall --clean --if-exists --load-via-partition-root --quote-all-identifiers --no-password --file=${PGDUMP_DIR}/pg_dumpall-$(date '+%Y-%m-%d-%H-%M').pgdump"],"concurrencyPolicy":"Allow","containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"enabled":true,"privileged":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"extraVolumeMounts":[],"extraVolumes":[],"failedJobsHistoryLimit":1,"labels":{},"networkPolicy":{"enabled":true},"nodeSelector":{},"podSecurityContext":{"enabled":true,"fsGroup":1001,"fsGroupChangePolicy":"Always","supplementalGroups":[],"sysctls":[]},"resources":{},"resourcesPreset":"nano","restartPolicy":"OnFailure","schedule":"@daily","startingDeadlineSeconds":"","storage":{"accessModes":["ReadWriteOnce"],"annotations":{},"enabled":true,"existingClaim":"","mountPath":"/backup/pgdump","resourcePolicy":"","size":"8Gi","storageClass":"","subPath":"","volumeClaimTemplates":{"selector":{}}},"successfulJobsHistoryLimit":3,"timeZone":"","tolerations":[],"ttlSecondsAfterFinished":""},"enabled":false},"clusterDomain":"cluster.local","common":{"exampleValue":"common-chart","global":{"compatibility":{"openshift":{"adaptSecurityContext":"auto"}},"defaultStorageClass":"","imagePullSecrets":[],"imageRegistry":"","postgresql":{"auth":{"database":"","existingSecret":"","password":"","postgresPassword":"","secretKeys":{"adminPasswordKey":"","replicationPasswordKey":"","userPasswordKey":""},"username":""},"service":{"ports":{"postgresql":""}}},"storageClass":""}},"commonAnnotations":{},"commonLabels":{},"containerPorts":{"postgresql":5432},"diagnosticMode":{"args":["infinity"],"command":["sleep"],"enabled":false},"extraDeploy":[],"fullnameOverride":"","global":{"compatibility":{"openshift":{"adaptSecurityContext":"auto"}},"defaultStorageClass":"","imagePullSecrets":[],"imageRegistry":"","postgresql":{"auth":{"database":"","existingSecret":"","password":"","postgresPassword":"","secretKeys":{"adminPasswordKey":"","replicationPasswordKey":"","userPasswordKey":""},"username":""},"service":{"ports":{"postgresql":""}}},"storageClass":""},"image":{"debug":false,"digest":"","pullPolicy":"IfNotPresent","pullSecrets":[],"registry":"docker.io","repository":"bitnami/postgresql","tag":"16.3.0-debian-12-r23"},"kubeVersion":"","ldap":{"basedn":"","binddn":"","bindpw":"","enabled":false,"port":"","prefix":"","scheme":"","searchAttribute":"","searchFilter":"","server":"","suffix":"","tls":{"enabled":false},"uri":""},"metrics":{"collectors":{},"containerPorts":{"metrics":9187},"containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"enabled":true,"privileged":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"customLivenessProbe":{},"customMetrics":{},"customReadinessProbe":{},"customStartupProbe":{},"enabled":false,"extraEnvVars":[],"image":{"digest":"","pullPolicy":"IfNotPresent","pullSecrets":[],"registry":"docker.io","repository":"bitnami/postgres-exporter","tag":"0.15.0-debian-12-r38"},"livenessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"prometheusRule":{"enabled":false,"labels":{},"namespace":"","rules":[]},"readinessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{},"resourcesPreset":"nano","service":{"annotations":{"prometheus.io/port":"{{ .Values.metrics.service.ports.metrics }}","prometheus.io/scrape":"true"},"clusterIP":"","ports":{"metrics":9187},"sessionAffinity":"None"},"serviceMonitor":{"enabled":false,"honorLabels":false,"interval":"","jobLabel":"","labels":{},"metricRelabelings":[],"namespace":"","relabelings":[],"scrapeTimeout":"","selector":{}},"startupProbe":{"enabled":false,"failureThreshold":15,"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1}},"nameOverride":"","postgresqlDataDir":"/bitnami/postgresql/data","postgresqlSharedPreloadLibraries":"pgaudit","primary":{"affinity":{},"annotations":{},"args":[],"automountServiceAccountToken":false,"command":[],"configuration":"","containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"enabled":true,"privileged":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"customLivenessProbe":{},"customReadinessProbe":{},"customStartupProbe":{},"existingConfigmap":"","existingExtendedConfigmap":"","extendedConfiguration":"","extraEnvVars":[],"extraEnvVarsCM":"","extraEnvVarsSecret":"","extraPodSpec":{},"extraVolumeMounts":[],"extraVolumes":[],"hostAliases":[],"hostIPC":false,"hostNetwork":false,"initContainers":[],"initdb":{"args":"","password":"","postgresqlWalDir":"","scripts":{},"scriptsConfigMap":"","scriptsSecret":"","user":""},"labels":{},"lifecycleHooks":{},"livenessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"primary","networkPolicy":{"allowExternal":true,"allowExternalEgress":true,"enabled":true,"extraEgress":[],"extraIngress":[],"ingressNSMatchLabels":{},"ingressNSPodMatchLabels":{}},"nodeAffinityPreset":{"key":"","type":"","values":[]},"nodeSelector":{},"pdb":{"create":true,"maxUnavailable":"","minAvailable":""},"persistence":{"accessModes":["ReadWriteOnce"],"annotations":{},"dataSource":{},"enabled":true,"existingClaim":"","labels":{},"mountPath":"/bitnami/postgresql","selector":{},"size":"8Gi","storageClass":"","subPath":"","volumeName":"data"},"persistentVolumeClaimRetentionPolicy":{"enabled":false,"whenDeleted":"Retain","whenScaled":"Retain"},"pgHbaConfiguration":"","podAffinityPreset":"","podAnnotations":{},"podAntiAffinityPreset":"soft","podLabels":{},"podSecurityContext":{"enabled":true,"fsGroup":1001,"fsGroupChangePolicy":"Always","supplementalGroups":[],"sysctls":[]},"preInitDb":{"scripts":{},"scriptsConfigMap":"","scriptsSecret":""},"priorityClassName":"","readinessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{},"resourcesPreset":"nano","schedulerName":"","service":{"annotations":{},"clusterIP":"","externalTrafficPolicy":"Cluster","extraPorts":[],"headless":{"annotations":{}},"loadBalancerClass":"","loadBalancerIP":"","loadBalancerSourceRanges":[],"nodePorts":{"postgresql":""},"ports":{"postgresql":5432},"sessionAffinity":"None","sessionAffinityConfig":{},"type":"ClusterIP"},"sidecars":[],"standby":{"enabled":false,"primaryHost":"","primaryPort":""},"startupProbe":{"enabled":false,"failureThreshold":15,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"terminationGracePeriodSeconds":"","tolerations":[],"topologySpreadConstraints":[],"updateStrategy":{"rollingUpdate":{},"type":"RollingUpdate"}},"psp":{"create":false},"rbac":{"create":false,"rules":[]},"readReplicas":{"affinity":{},"annotations":{},"args":[],"automountServiceAccountToken":false,"command":[],"containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"enabled":true,"privileged":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"customLivenessProbe":{},"customReadinessProbe":{},"customStartupProbe":{},"extendedConfiguration":"","extraEnvVars":[],"extraEnvVarsCM":"","extraEnvVarsSecret":"","extraPodSpec":{},"extraVolumeMounts":[],"extraVolumes":[],"hostAliases":[],"hostIPC":false,"hostNetwork":false,"initContainers":[],"labels":{},"lifecycleHooks":{},"livenessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"read","networkPolicy":{"allowExternal":true,"allowExternalEgress":true,"enabled":true,"extraEgress":[],"extraIngress":[],"ingressNSMatchLabels":{},"ingressNSPodMatchLabels":{}},"nodeAffinityPreset":{"key":"","type":"","values":[]},"nodeSelector":{},"pdb":{"create":true,"maxUnavailable":"","minAvailable":""},"persistence":{"accessModes":["ReadWriteOnce"],"annotations":{},"dataSource":{},"enabled":true,"existingClaim":"","labels":{},"mountPath":"/bitnami/postgresql","selector":{},"size":"8Gi","storageClass":"","subPath":""},"persistentVolumeClaimRetentionPolicy":{"enabled":false,"whenDeleted":"Retain","whenScaled":"Retain"},"podAffinityPreset":"","podAnnotations":{},"podAntiAffinityPreset":"soft","podLabels":{},"podSecurityContext":{"enabled":true,"fsGroup":1001,"fsGroupChangePolicy":"Always","supplementalGroups":[],"sysctls":[]},"priorityClassName":"","readinessProbe":{"enabled":true,"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"replicaCount":1,"resources":{},"resourcesPreset":"nano","schedulerName":"","service":{"annotations":{},"clusterIP":"","externalTrafficPolicy":"Cluster","extraPorts":[],"headless":{"annotations":{}},"loadBalancerClass":"","loadBalancerIP":"","loadBalancerSourceRanges":[],"nodePorts":{"postgresql":""},"ports":{"postgresql":5432},"sessionAffinity":"None","sessionAffinityConfig":{},"type":"ClusterIP"},"sidecars":[],"startupProbe":{"enabled":false,"failureThreshold":15,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"terminationGracePeriodSeconds":"","tolerations":[],"topologySpreadConstraints":[],"updateStrategy":{"rollingUpdate":{},"type":"RollingUpdate"}},"replication":{"applicationName":"my_application","numSynchronousReplicas":0,"synchronousCommit":"off"},"serviceAccount":{"annotations":{},"automountServiceAccountToken":false,"create":true,"name":""},"serviceBindings":{"enabled":false},"shmVolume":{"enabled":true,"sizeLimit":""},"tls":{"autoGenerated":false,"certCAFilename":"","certFilename":"","certKeyFilename":"","certificatesSecret":"","crlFilename":"","enabled":false,"preferServerCiphers":true},"volumePermissions":{"containerSecurityContext":{"runAsGroup":0,"runAsNonRoot":false,"runAsUser":0,"seLinuxOptions":{},"seccompProfile":{"type":"RuntimeDefault"}},"enabled":false,"image":{"digest":"","pullPolicy":"IfNotPresent","pullSecrets":[],"registry":"docker.io","repository":"bitnami/os-shell","tag":"12-debian-12-r26"},"resources":{},"resourcesPreset":"nano"}}},"schema":null,"files":[{"name":".gitignore","data":"Y2hhcnRzLw=="},{"name":"kblock.yaml","data":"ZW5naW5lOiBoZWxtCmRlZmluaXRpb246CiAgZ3JvdXA6IGFjbWUuY29tCiAgdmVyc2lvbjogdjEKICBraW5kOiBQb3N0Z3JlcwogIHBsdXJhbDogcG9zdGdyZXNlcwpvcGVyYXRvcjoKICBuYW1lc3BhY2U6IGFjbWUtb3BlcmF0b3JzCiAgcGVybWlzc2lvbnM6CiAgICAtIGFwaUdyb3VwczogWyIqIl0KICAgICAgcmVzb3VyY2VzOiBbIioiXQogICAgICB2ZXJiczogWyIqIl0="},{"name":"out.json","data":""}]},"manifest":"---\n# Source: postgres/charts/postgresql/templates/primary/networkpolicy.yaml\nkind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\n    app.kubernetes.io/component: primary\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/instance: test\n      app.kubernetes.io/name: postgresql\n      app.kubernetes.io/component: primary\n  policyTypes:\n    - Ingress\n    - Egress\n  egress:\n    - {}\n  ingress:\n    - ports:\n        - port: 5432\n---\n# Source: postgres/charts/postgresql/templates/primary/pdb.yaml\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\n    app.kubernetes.io/component: primary\nspec:\n  maxUnavailable: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/instance: test\n      app.kubernetes.io/name: postgresql\n      app.kubernetes.io/component: primary\n---\n# Source: postgres/charts/postgresql/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\nautomountServiceAccountToken: false\n---\n# Source: postgres/charts/postgresql/templates/secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\ntype: Opaque\ndata:\n  postgres-password: \"eVo1STlJMFhuNQ==\"\n  # We don't auto-generate LDAP password when it's not provided as we do for other passwords\n---\n# Source: postgres/charts/postgresql/templates/primary/svc-headless.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: test-postgresql-hl\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\n    app.kubernetes.io/component: primary\n  annotations:\nspec:\n  type: ClusterIP\n  clusterIP: None\n  # We want all pods in the StatefulSet to have their addresses published for\n  # the sake of the other Postgresql pods even before they're ready, since they\n  # have to be able to talk to each other in order to become ready.\n  publishNotReadyAddresses: true\n  ports:\n    - name: tcp-postgresql\n      port: 5432\n      targetPort: tcp-postgresql\n  selector:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/component: primary\n---\n# Source: postgres/charts/postgresql/templates/primary/svc.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\n    app.kubernetes.io/component: primary\nspec:\n  type: ClusterIP\n  sessionAffinity: None\n  ports:\n    - name: tcp-postgresql\n      port: 5432\n      targetPort: tcp-postgresql\n      nodePort: null\n  selector:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/component: primary\n---\n# Source: postgres/charts/postgresql/templates/primary/statefulset.yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: test-postgresql\n  namespace: \"default\"\n  labels:\n    app.kubernetes.io/instance: test\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: postgresql\n    app.kubernetes.io/version: 16.3.0\n    helm.sh/chart: postgresql-15.5.20\n    app.kubernetes.io/component: primary\nspec:\n  replicas: 1\n  serviceName: test-postgresql-hl\n  updateStrategy:\n    rollingUpdate: {}\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app.kubernetes.io/instance: test\n      app.kubernetes.io/name: postgresql\n      app.kubernetes.io/component: primary\n  template:\n    metadata:\n      name: test-postgresql\n      labels:\n        app.kubernetes.io/instance: test\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/name: postgresql\n        app.kubernetes.io/version: 16.3.0\n        helm.sh/chart: postgresql-15.5.20\n        app.kubernetes.io/component: primary\n    spec:\n      serviceAccountName: test-postgresql\n      \n      automountServiceAccountToken: false\n      affinity:\n        podAffinity:\n          \n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - podAffinityTerm:\n                labelSelector:\n                  matchLabels:\n                    app.kubernetes.io/instance: test\n                    app.kubernetes.io/name: postgresql\n                    app.kubernetes.io/component: primary\n                topologyKey: kubernetes.io/hostname\n              weight: 1\n        nodeAffinity:\n          \n      securityContext:\n        fsGroup: 1001\n        fsGroupChangePolicy: Always\n        supplementalGroups: []\n        sysctls: []\n      hostNetwork: false\n      hostIPC: false\n      containers:\n        - name: postgresql\n          image: docker.io/bitnami/postgresql:16.3.0-debian-12-r23\n          imagePullPolicy: \"IfNotPresent\"\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            privileged: false\n            readOnlyRootFilesystem: true\n            runAsGroup: 1001\n            runAsNonRoot: true\n            runAsUser: 1001\n            seLinuxOptions: {}\n            seccompProfile:\n              type: RuntimeDefault\n          env:\n            - name: BITNAMI_DEBUG\n              value: \"false\"\n            - name: POSTGRESQL_PORT_NUMBER\n              value: \"5432\"\n            - name: POSTGRESQL_VOLUME_DIR\n              value: \"/bitnami/postgresql\"\n            - name: PGDATA\n              value: \"/bitnami/postgresql/data\"\n            # Authentication\n            - name: POSTGRES_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: test-postgresql\n                  key: postgres-password\n            # LDAP\n            - name: POSTGRESQL_ENABLE_LDAP\n              value: \"no\"\n            # TLS\n            - name: POSTGRESQL_ENABLE_TLS\n              value: \"no\"\n            # Audit\n            - name: POSTGRESQL_LOG_HOSTNAME\n              value: \"false\"\n            - name: POSTGRESQL_LOG_CONNECTIONS\n              value: \"false\"\n            - name: POSTGRESQL_LOG_DISCONNECTIONS\n              value: \"false\"\n            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG\n              value: \"off\"\n            # Others\n            - name: POSTGRESQL_CLIENT_MIN_MESSAGES\n              value: \"error\"\n            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES\n              value: \"pgaudit\"\n          ports:\n            - name: tcp-postgresql\n              containerPort: 5432\n          livenessProbe:\n            failureThreshold: 6\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 5\n            exec:\n              command:\n                - /bin/sh\n                - -c\n                - exec pg_isready -U \"postgres\" -h 127.0.0.1 -p 5432\n          readinessProbe:\n            failureThreshold: 6\n            initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 5\n            exec:\n              command:\n                - /bin/sh\n                - -c\n                - -e\n                - |\n                  exec pg_isready -U \"postgres\" -h 127.0.0.1 -p 5432\n                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n          resources:\n            limits:\n              cpu: 150m\n              ephemeral-storage: 2Gi\n              memory: 192Mi\n            requests:\n              cpu: 100m\n              ephemeral-storage: 50Mi\n              memory: 128Mi\n          volumeMounts:\n            - name: empty-dir\n              mountPath: /tmp\n              subPath: tmp-dir\n            - name: empty-dir\n              mountPath: /opt/bitnami/postgresql/conf\n              subPath: app-conf-dir\n            - name: empty-dir\n              mountPath: /opt/bitnami/postgresql/tmp\n              subPath: app-tmp-dir\n            - name: dshm\n              mountPath: /dev/shm\n            - name: data\n              mountPath: /bitnami/postgresql\n      volumes:\n        - name: empty-dir\n          emptyDir: {}\n        - name: dshm\n          emptyDir:\n            medium: Memory\n  volumeClaimTemplates:\n    - apiVersion: v1\n      kind: PersistentVolumeClaim\n      metadata:\n        name: data\n      spec:\n        accessModes:\n          - \"ReadWriteOnce\"\n        resources:\n          requests:\n            storage: \"8Gi\"\n","version":1,"namespace":"default"}
